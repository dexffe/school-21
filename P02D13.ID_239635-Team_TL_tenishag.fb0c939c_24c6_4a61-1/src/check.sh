#!/bin/bash

# check_all_c_files.sh
# –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç –í–°–ï .c —Ñ–∞–π–ª—ã –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –ø–æ–¥–∫–∞—Ç–∞–ª–æ–≥–∞—Ö,
# –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Ö —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ (cppcheck),
# –∫–æ–º–ø–∏–ª—è—Ü–∏—é –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç —á–µ—Ä–µ–∑ Valgrind.

set -euo pipefail

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() { echo -e "${BLUE}[INFO]${NC} $1"; }
warn() { echo -e "${YELLOW}[WARN]${NC} $1"; }
error() { echo -e "${RED}[ERROR]${NC} $1" >&2; }
success() { echo -e "${GREEN}[OK]${NC} $1"; }

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    local missing=()
    for cmd in gcc clang-format valgrind find cppcheck; do
        if ! command -v "$cmd" &> /dev/null; then
            missing+=("$cmd")
        fi
    done
    if [ ${#missing[@]} -ne 0 ]; then
        error "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: ${missing[*]}"
        error "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install build-essential clang-format valgrind cppcheck"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
check_format() {
    local file="$1"
    local temp=$(mktemp)
    cp "$file" "$temp"
    clang-format -i "$file"
    if cmp -s "$file" "$temp"; then
        rm "$temp"
        return 0
    else
        cp "$temp" "$file"
        rm "$temp"
        return 1
    fi
}

# –ó–∞–ø—É—Å–∫ cppcheck
run_cppcheck() {
    local file="$1"
    cppcheck --enable=all \
             --suppress=missingIncludeSystem \
             --quiet \
             --error-exitcode=1 \
             "$file" >/dev/null 2>&1
}

# –ö–æ–º–ø–∏–ª—è—Ü–∏—è
compile_file() {
    local src="$1"
    local exe="${src%.*}.out"
    gcc -std=c11 -Wall -Wextra -Werror -g -O0 -o "$exe" "$src" -lncurses
}

# –ó–∞–ø—É—Å–∫ Valgrind
run_valgrind() {
    local exe="$1"
    valgrind --leak-check=full \
             --show-leak-kinds=all \
             --track-origins=yes \
             --error-exitcode=1 \
             --quiet \
             "$exe" < /dev/null > /dev/null 2>&1
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
process_file() {
    local file="$1"
    log "–û–±—Ä–∞–±–æ—Ç–∫–∞: $file"

    local failed=0
    local exe="${file%.*}.out"

    # 1. –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    if ! check_format "$file"; then
        warn "–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç clang-format: $file"
        ((failed++))
    fi

    # 2. Cppcheck
    if ! run_cppcheck "$file"; then
        error "Cppcheck –æ–±–Ω–∞—Ä—É–∂–∏–ª –æ—à–∏–±–∫–∏: $file"
        ((failed++))
    fi

    # 3. –ö–æ–º–ø–∏–ª—è—Ü–∏—è
    if ! compile_file "$file" 2>/dev/null; then
        error "–û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏: $file"
        ((failed++))
    else
        # 4. Valgrind
        if [[ -f "$exe" ]]; then
            if ! run_valgrind "$exe"; then
                error "Valgrind –æ–±–Ω–∞—Ä—É–∂–∏–ª –æ—à–∏–±–∫–∏: $file"
                ((failed++))
            fi
            rm -f "$exe"
        fi
    fi

    if [[ $failed -eq 0 ]]; then
        success "‚úÖ $file ‚Äî OK"
        return 0
    else
        error "‚ùå $file ‚Äî FAILED"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    check_dependencies

    log "–ü–æ–∏—Å–∫ –≤—Å–µ—Ö .c —Ñ–∞–π–ª–æ–≤ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –ø–æ–¥–∫–∞—Ç–∞–ª–æ–≥–∞—Ö..."
    mapfile -d '' c_files < <(find . -type f -name "*.c" -print0)

    if [ ${#c_files[@]} -eq 0 ]; then
        error "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ .c —Ñ–∞–π–ª–∞"
        exit 1
    fi

    total=${#c_files[@]}
    passed=0
    failed=0

    log "–ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: $total"

    for file in "${c_files[@]}"; do
        if process_file "$file"; then
            ((passed++))
        else
            ((failed++))
        fi
    done

    echo
    log "=== –ò–¢–û–ì ==="
    echo "–í—Å–µ–≥–æ:    $total"
    echo "–£—Å–ø–µ—à–Ω–æ:  $passed"
    echo "–û—à–∏–±–∫–∏:   $failed"

    if [[ $failed -eq 0 ]]; then
        success "üéâ –í—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É!"
        exit 0
    else
        error "‚ö†Ô∏è  $failed —Ñ–∞–π–ª(–æ–≤) –Ω–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É"
        exit 1
    fi
}

main "$@"
